---
components:
  schemas:
    loginUser:
      properties:
#Login de um Utilizador existente
        login:
          properties:
            email:
              pattern: '[^@ \t\r\n]+@[^@ \t\r\n]+[^@ \t\r\n]+'
              type: string
            password:
              type: string
          type: object
      type: object
#resgitar um novo Utilizador/Listar Utilizadores
    registoUser:
      properties:
        user:
          properties:
            apelido:
              type: string
            contacto:
              pattern: 9[0-9]{2}[0-9]{3}[0-9]{3}$
              type: string
            email:
              pattern: '[^@ \t\r\n]+@[^@ \t\r\n]+[^@ \t\r\n]+'
              type: string
            nomeUser:
              type: string
            password:
              type: string
          type: object
      type: object
#Criar, atualizar, ver , apagar uma tarefa
    tarefa:
      properties:
        dataVencimento:
          description: A data de vencimento da tarefa (ISO 8601).
          format: date-time
          type: string
        descrição:
          description: A descrição da tarefa.
          maxLength: 200
          minLength: 10
          type: string
        estado:
          description: O estado da tarefa (concluído, em progresso ou futuro).
          enum:
            - concluido
            - Hoje
            - Agendado
          type: string
        prioridade:
          description: A prioridade da tarefa (de 0 a 20).
          maximum: 20
          minimum: 0
          type: integer
        tarefaId:
          description: O ID da tarefa.
          format: uuid
          type: string
        título:
          description: O título da tarefa.
          minLength: 1
          type: string
        userId:
          description: O ID do usuário associado à tarefa.
          format: uuid
          type: string
      required:
        - userId
        - tarefaId
        - título
        - descrição
        - dataVencimento
        - estado
        - prioridade
#Associar uma tarefa a um utilizador
    tarefasUser:
        type: object
        properties:
          userId:
            type: string
            format: uuid
            description: "O ID do usuário associado à tarefa."
            pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"
          nome:
            type: string
          tarefas:
            $ref: '#/components/schemas/tarefa'
        required:
          - userId
          - nome
          - tarefas
#Criar, editar e listar uma tarefa Padrao          
    tarefasPadrao:
      items:
        properties:
          dataVencimento:
            description: A data de vencimento da tarefa (ISO 8601).
            format: date
            type: string
          descrição:
            description: A descrição da tarefa.
            maxLength: 200
            minLength: 10
            type: string
          estado:
            description: O estado da tarefa (concluído, em progresso ou futuro).
            enum: ["concluido", "Hoje", "Agendado"]
            type: string
          prioridade:
            description: A prioridade da tarefa (de 0 a 20).
            maximum: 20
            minimum: 0
            pattern: ^[0-9]+$
            type: integer
          tarefaId:
            format: uuid
            pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
            type: string
          título:
            description: O título da tarefa.
            maxLength: 30
            minLength: 4
            type: string
        required:
          - tarefaId
          - título
          - descrição
          - estado
          - dataVencimento
          - prioridade
        type: object
      type: array
info:
  title: API De Gestão De Tarefas  ToDo*
  version: '1.0'
openapi: 3.0.2
paths:
  /api/login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true
      responses:
        '200':
          description: Sucesso
        '400':
          description: Requisição inválida
      summary: Endpoint para autenticação
      tags:
        - Users
  /api/tarefas:
    delete:
      description: Endpoint para excluir uma tarefa existente.
      parameters:
        - in: path
          name: tarefaId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: Tarefa excluída com sucesso.
        '404':
          description: Tarefa não encontrada.
        '500':
          description: Erro interno do servidor.
      summary: Excluir uma tarefa existente
      tags:
        - Tarefas
    get:
      description: Endpoint para obter informações detalhadas sobre uma tarefa.
      parameters:
        - in: path
          name: tarefaId
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tarefa'
          description: Informações detalhadas sobre a tarefa.
        '404':
          description: Tarefa não encontrada.
        '500':
          description: Erro interno do servidor.
      summary: Obter informações sobre uma tarefa
      tags:
        - Tarefas
    post:
      description: Endpoint para criar uma nova tarefa.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tarefa'
        required: true
      responses:
        '201':
          description: Tarefa criada com sucesso.
        '400':
          description: Requisição inválida. Verifique os parâmetros de entrada.
        '500':
          description: Erro interno do servidor.
      summary: Criar uma nova tarefa
      tags:
        - Tarefas
    put:
      description: Endpoint para atualizar uma tarefa existente.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tarefa'
        required: true
      responses:
        '200':
          description: Tarefa atualizada com sucesso.
        '400':
          description: Requisição inválida. Verifique os parâmetros de entrada.
        '404':
          description: Tarefa não encontrada.
        '500':
          description: Erro interno do servidor.
      summary: Atualizar uma tarefa existente
      tags:
        - Tarefas
  /api/users:
    get:
      description: Retorna todos os usuários registrados.
      operationId: getUsers
      parameters:
        - description: Número de registros a pular.
          in: query
          name: skip
          schema:
            format: int32
            type: integer
        - description: Número máximo de registros a retornar.
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/registoUser'
                type: array
          description: Todos os usuários registrados.
      tags:
        - Users
    put:
      description: Endpoint para atualizar informações de um usuário existente.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registoUser'
        required: true
      responses:
        '200':
          description: Informações do usuário atualizadas com sucesso.
        '400':
          description: Requisição inválida. Verifique os parâmetros de entrada.
        '404':
          description: Usuário não encontrado.
        '500':
          description: Erro interno do servidor.
      summary: Atualizar informações de um usuário
      tags:
        - Users
  /api/listartarefas:
    get:
      description: returns all registered tarefas
      parameters:
        - description: number of records to skip
          in: query
          name: skip
          schema:
            format: int32
            type: integer
        - description: max number of records to return
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tarefasPadrao'
                items:
                  format: uri
                  type: string
                type: array
          description: All the devices
      tags:
        - Listas
  /api/tarefasUsers:
    get:
      description: associa uma tarefa a um utilizador
      parameters:
        - description: number of records to skip
          in: query
          name: skip
          schema:
            format: int32
            type: integer
        - description: max number of records to return
          in: query
          name: limit
          schema:
            format: int32
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tarefasPadrao'
                items:
                  format: uri
                  type: string
                type: array
          description: All the devices
      tags:
        - Tarefas User
    post:
      description: Endpoint para criar uma nova tarefa.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tarefasPadrao'
        required: true
      responses:
        '201':
          description: Tarefa criada com sucesso.
        '400':
          description: Requisição inválida. Verifique os parâmetros de entrada.
        '500':
          description: Erro interno do servidor.
      summary: Criar uma nova tarefa
      tags:
        - Tarefas User
servers:
  - url: https://api.server.test/v1